/*
 @author Shimaa Ibrahim
 */ 

package CLOE_GUI;
import java.util.*;
//import PreProcessing.StopWordsRemoval;
import java.io.IOException;
//import java.util.StringTokenizer;
//import org.apache.tika.exception.TikaException;
import org.apache.tika.language.LanguageIdentifier;

import com.google.api.translate.Language; 
import com.google.api.translate.Translator;
import edu.stanford.nlp.tagger.maxent.MaxentTagger;
import java.awt.BorderLayout;
import java.awt.TextArea;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import com.google.api.detect.Detect; 
import com.google.api.detect.DetectResult; 
import com.google.api.translate.Language;  
import com.google.api.translate.Translate; 


/**
 *
 * @author shimaa
 */

public class EnrichmentUI extends javax.swing.JFrame {
    public String dominantClassification;
    public String languageTesting;
    /**
     * Creates new form Enrichment
     */
    public EnrichmentUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        list1 = new java.awt.List();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multilingual Ontology Enrichment");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Input text");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton1.setText("Enrich");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("Input language is:");
        jLabel4.setName(""); // NOI18N

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("Domain is:");

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText("Candidate relations");

        list1.setMultipleMode(true);
        list1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list1MouseClicked(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton3.setText("Validate and go to ontology");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Concept:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Relation:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Concept:");

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(list1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: 
        String paragraph_Tourism = "Pyramids have been runs built by civilizations. The business user runs largest "
                + "pyramid by volume is the Great Pyramid of Cholula java updated.";
        String domain_1 = "Tourism";
        
        String paragraph_Economy = "A stock runs exchange reports working is often the most runs important component of a stock market, Cholula civilizations civilizations.";
        String domain_2 = "Economy";
        
        String Paragraph_IT = "Dear Mr Fathallah,\n" +
        "My important computer with java on the development environment has no Internet connection Jave updated production environment. My important computer runs windows and has java. My Windows 7 is 32-bit in the production environment.\n" +
        "Regards,\n" +
        "Hassan";
        String domain_3 = "Information Technology";
        //######################### Language Detection #####################################
        //Domain 1 Tourism
        //System.out.println("Domain 1: " + domain_1);
        LanguageIdentifier identifier = new LanguageIdentifier(paragraph_Tourism);
        String language = identifier.getLanguage();
        //System.out.println("Language of the given content is : " + language);
        //Domain 2 Economy
        //System.out.println("Domain 2: " + domain_2);
        LanguageIdentifier identifier2 = new LanguageIdentifier(paragraph_Economy);
        String language2 = identifier2.getLanguage();
        //System.out.println("Language of the given content is : " + language2);
        //Domain 3 IT
        //System.out.println("Domain 3: " + domain_3);
        LanguageIdentifier identifier3 = new LanguageIdentifier(Paragraph_IT);
        String language3 = identifier3.getLanguage();
        //System.out.println("Language of the given content is : " + language3);
        /*
        String text = "Hello"
        Translate.setHttpReferrer("http://translate.google.cn"); 
        Language LanguageFrom=GoogleTranslator.getDectLanguage(text);   
        try {
            String translationString= Translate.execute(text,LanguageFrom, Language.ENGLISH);
            //String[] text = new String[2];
            //text[0] = "Hello";
            //text[1] = "World";
            //Translator translate = Translator.translate(text, Language.ENGLISH, Language.ROMANIAN);
            //String text = translate.translate("Hello!", Language.ENGLISH, Language.ROMANIAN);
            //System.out.println(text); // "Bună ziua!" 
        } catch (Exception ex) {
            Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
        }*/

//######################### Sentence Splittet #####################################
        //System.out.println("######################## Sentence Detection #########################");
        //Domain 1
        //System.out.println("Domain 1: " + domain_1);
        String[] sentences_Tourism = null;
        try {
            sentences_Tourism = PreProcessing.OpenNLP.SentenceDetect(paragraph_Tourism);
        } catch (IOException ex) {
            Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //System.out.println("Number of sentences = "+ sentences_Tourism.length);
        //for(int i=0; i<sentences_Tourism.length; i++){
            //System.out.println("Sentence number "+ i + ": "+ sentences_Tourism[i]);
        //}
        //Domain 2
        //System.out.println("Domain 2: " + domain_2);
        String[] sentences_Economy = null;
        try {
            sentences_Economy = PreProcessing.OpenNLP.SentenceDetect(paragraph_Economy);
        } catch (IOException ex) {
            Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //System.out.println("Number of sentences = "+ sentences_Economy.length);
        //for(int i=0; i<sentences_Economy.length; i++){
            //System.out.println("Sentence number "+ i + ": "+ sentences_Economy[i]);
        //}
        //Domain 3
        //System.out.println("Domain 3: " + domain_3);
        String[] sentences_IT = null;
        try {
            sentences_IT = PreProcessing.OpenNLP.SentenceDetect(Paragraph_IT);
        } catch (IOException ex) {
            Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //System.out.println("Number of sentences = "+ sentences_IT.length);
        //for(int i=0; i<sentences_IT.length; i++){
        //    System.out.println("Sentence number "+ i + ": "+ sentences_IT[i]);
        //}
        //############### Removing Stop Wrods from tokens ###############
        //System.out.println("######################## Tokens after removing stop words #########################");
        //Domain 1
       // System.out.println("Domain 1: " + domain_1);
        String s[] = new String[sentences_Tourism.length];
        for(int i=0; i<sentences_Tourism.length; i++){
            s[i] = PreProcessing.StopWordsRemoval.removeStopWordsFromSentence(sentences_Tourism[i]);
        }
        //for(int i=0; i<s.length; i++){
        //    System.out.println("Sentence number "+ i + ": "+ s[i]);
        //}  
        //Domain 2
        //System.out.println("Domain 2: " + domain_2);
        String s2[] = new String[sentences_Economy.length];
        for(int i=0; i<sentences_Economy.length; i++){
            s2[i] = PreProcessing.StopWordsRemoval.removeStopWordsFromSentence(sentences_Economy[i]);
        }
       // for(int i=0; i<s2.length; i++){
       //     System.out.println("Sentence number "+ i + ": "+ s2[i]);
       // }
        //Domain 3
       // System.out.println("Domain 3: " + domain_3);
        String s3[] = new String[sentences_IT.length];
        for(int i=0; i<sentences_IT.length; i++){
            s3[i] = PreProcessing.StopWordsRemoval.removeStopWordsFromSentence(sentences_IT[i]);
        }
       // for(int i=0; i<s3.length; i++){
       //     System.out.println("Sentence number "+ i + ": "+ s3[i]);
       // }
        // ############### POS Tagging ###############        
        //System.out.println("######################## POSTag #########################");        
        //Domain 1
        //System.out.println("Domain 1: " + domain_1);
        String sentences_POSTag[]= new String[s.length];
        ArrayList<String> words_d1 = new ArrayList<String>();
        for(int i=0; i<s.length; i++){
            try {
                sentences_POSTag[i] = PreProcessing.OpenNLP.POSTag(s[i]);
            } catch (IOException ex) {
                Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            //System.out.println("Sentence number "+ i + ": "+ sentences_POSTag[i]);
            //System.out.println("Number of tokens: "+ PreProcessing.OpenNLP.TagTokens.length);
            //System.out.println("Number of tags: "+ PreProcessing.OpenNLP.tags.length);
            //System.out.println("Tokens and tags in sentence "+ i +":" );
            for(int j=0; j<PreProcessing.OpenNLP.TagTokens.length; j++){
                //System.out.println(PreProcessing.OpenNLP.TagTokens[j]+" "+ PreProcessing.OpenNLP.tags[j]);
                words_d1.add(PreProcessing.OpenNLP.TagTokens[j].toLowerCase());
                
            }
        }
        //Domain 2
        //System.out.println("Domain 2: " + domain_2);
        String sentences_POSTag2[]= new String[s2.length];
        ArrayList<String> words_d2 = new ArrayList<String>();
        for(int i=0; i<s2.length; i++){
            try {
                sentences_POSTag2[i] = PreProcessing.OpenNLP.POSTag(s2[i]);
            } catch (IOException ex) {
                Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            //System.out.println("Sentence number "+ i + ": "+ sentences_POSTag2[i]);
            //System.out.println("Number of tokens: "+ PreProcessing.OpenNLP.TagTokens.length);
            //System.out.println("Number of tags: "+ PreProcessing.OpenNLP.tags.length);
            //System.out.println("Tokens and tags in sentence "+ i +":" );
            for(int j=0; j<PreProcessing.OpenNLP.TagTokens.length; j++){
                //System.out.println(PreProcessing.OpenNLP.TagTokens[j]+" "+ PreProcessing.OpenNLP.tags[j]);
                words_d2.add(PreProcessing.OpenNLP.TagTokens[j].toLowerCase());
                
            }
        }
        //Domain 3
        //System.out.println("Domain 3: " + domain_3);
        String sentences_POSTag3[]= new String[s3.length];
        ArrayList<String> words_d3 = new ArrayList<String>();
        for(int i=0; i<s3.length; i++){
            try {
                sentences_POSTag3[i] = PreProcessing.OpenNLP.POSTag(s3[i]);
            } catch (IOException ex) {
                Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            //System.out.println("Sentence number "+ i + ": "+ sentences_POSTag3[i]);
           // System.out.println("Number of tokens: "+ PreProcessing.OpenNLP.TagTokens.length);
            //System.out.println("Number of tags: "+ PreProcessing.OpenNLP.tags.length);
           // System.out.println("Tokens and tags in sentence "+ i +":" );
            for(int j=0; j<PreProcessing.OpenNLP.TagTokens.length; j++){
               // System.out.println(PreProcessing.OpenNLP.TagTokens[j]+" "+ PreProcessing.OpenNLP.tags[j]);
                words_d3.add(PreProcessing.OpenNLP.TagTokens[j].toLowerCase());
                
            }
        }
        
        //####################Testing##############################
        //System.out.println("################# Testing #############");
        //Testing
        LanguageIdentifier identifierTesting = new LanguageIdentifier(jTextArea1.getText());
        languageTesting = identifierTesting.getLanguage();
        
        //Split sentences
        String[] sentences_test = null;
        try {
            sentences_test = PreProcessing.OpenNLP.SentenceDetect(jTextArea1.getText());
        } 
        catch (IOException ex) {
            Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Number of sentences = "+ sentences_test.length);
        for(int i=0; i<sentences_test.length; i++){
            if(sentences_test[i].split(",").length == 3)
            {
                String[] splittedSentence = sentences_test[i].split(",");
                sentences_test[i] = splittedSentence[0].concat(splittedSentence[2]);    
            }
            System.out.println("Sentence number "+ i + ": "+ sentences_test[i]);
        }
        
        //Remove stop words
        String sTest[] = new String[sentences_test.length];
        //String sTest[] = sentences_test;
        for(int i=0; i<sentences_test.length; i++){
            sTest[i] = PreProcessing.StopWordsRemoval.removeStopWordsFromSentence(sentences_test[i]);
        }
        for(int i=0; i<sTest.length; i++){
            System.out.println("Sentence number "+ i + " after removing stop words: "+ sTest[i]);
        }  
        //POS tagging
        String sentencesTest_POSTag[]= new String[sTest.length];
        ArrayList<String> words_test = new ArrayList<String>();
        Integer numberOfNouns[] = new Integer[sentences_test.length];
        Integer numberOfVerbs[] = new Integer[sentences_test.length];
        
        if(languageTesting.equalsIgnoreCase("de"))
        {
            MaxentTagger tagger = new MaxentTagger("taggers/german-fast.tagger");
            for(int i=0; i<sTest.length; i++)
            {
                sentencesTest_POSTag[i] = tagger.tagString(sTest[i]);
                System.out.println("POS tagging");
                System.out.println("Sentence "+ i +" "+sentencesTest_POSTag[i]);
                String[] tokens = sentencesTest_POSTag[i].split(" ");
                numberOfNouns[i] = 0;
                numberOfVerbs[i] = 0;
                for (String tok : tokens){
                    String[] taggedTokens = tok.split("_");
                    if (taggedTokens[1].startsWith("NN") ||taggedTokens[1].startsWith("NE")){
                        numberOfNouns[i] ++;
                        //System.out.println("Number of nounes"+ numberOfNouns);
                    }
                    if (taggedTokens[1].startsWith("VAFIN") || taggedTokens[1].startsWith("VPP")|| taggedTokens[1].startsWith("VVFIN")|| taggedTokens[1].startsWith("VVPP")|| taggedTokens[1].startsWith("VVINF")){
                        numberOfVerbs[i] ++;
                        //System.out.println("Number of verbs"+ numberOfVerbs);
                    }
                    words_test.add(taggedTokens[0].toLowerCase());
                }
                System.out.println("Number of nouns = "+ numberOfNouns[i]);
                System.out.println("Number of verbs = "+ numberOfVerbs[i]);
            }
        }
        else if(languageTesting.equalsIgnoreCase("en"))
        {
            for(int i=0; i<sTest.length; i++){
                try {
                    sentencesTest_POSTag[i] = PreProcessing.OpenNLP.POSTag(sTest[i]);
                } catch (IOException ex) {
                    Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println("Sentence number "+ i + "with tags: "+ sentencesTest_POSTag[i]);
                System.out.println("Number of tokens: "+ PreProcessing.OpenNLP.TagTokens.length);
                System.out.println("Number of tags: "+ PreProcessing.OpenNLP.tags.length);
                //System.out.println("Tokens and tags in sentence "+ i +":" );
                numberOfNouns[i] = 0;
                numberOfVerbs[i] = 0;
                for(int j=0; j<PreProcessing.OpenNLP.TagTokens.length; j++){
                    //System.out.println(PreProcessing.OpenNLP.TagTokens[j]+" "+ PreProcessing.OpenNLP.tags[j]);
                    words_test.add(PreProcessing.OpenNLP.TagTokens[j].toLowerCase());
                    if(PreProcessing.OpenNLP.tags[j].equals("NN") || PreProcessing.OpenNLP.tags[j].equals("NNP") || PreProcessing.OpenNLP.tags[j].equals("NNS"))
                        numberOfNouns[i] ++;
                    if(PreProcessing.OpenNLP.tags[j].equals("VBN") || PreProcessing.OpenNLP.tags[j].equals("VB") || PreProcessing.OpenNLP.tags[j].equals("VBD")|| PreProcessing.OpenNLP.tags[j].equals("VBZ")|| PreProcessing.OpenNLP.tags[j].equals("VBG")|| PreProcessing.OpenNLP.tags[j].equals("VBP"))
                        numberOfVerbs[i] ++;
                }
                System.out.println("Number of nouns = "+ numberOfNouns[i]);
                System.out.println("Number of verbs = "+ numberOfVerbs[i]);
            }
        }
       
        //################## Classification ################
        //System.out.println("################## Membership Classification ################");        
        //Classification for English text
        DomainIdentification.Classification.Classification_text_to_Domain_training(words_d1, words_d2, words_d3);
        dominantClassification = DomainIdentification.Classification.Classification_text_to_Domain_testing(words_d1, words_d2, words_d3, words_test);
        System.out.println("The domain for the tested text is "+ dominantClassification);
        
        //################## Sentence Selection ################
        List<String> candidateSentencesSelected = new ArrayList<>(Arrays.asList(sTest));
        
        System.out.println("################## Candidate Sentence Selection ################" + candidateSentencesSelected.size());
        //System.out.println("All sentences in the text: ");
        //for(int i = 0; i<sTest.length; i++)
           // System.out.println("Sentence "+i+" "+sTest[i]);
        for(int i = 0; i<candidateSentencesSelected.size(); i++)
            if((numberOfNouns[i] < 2) || (numberOfVerbs[i] == 0))
            {
                candidateSentencesSelected.remove(i);
            }
        System.out.println("Candidate Sentences: ");
        System.out.println(candidateSentencesSelected);
        
        /*JFrame myFrame = new JFrame("Test GUI");
        myFrame.setVisible(true);
        myFrame.setBounds(300, 200, 700, 400);
        JLabel languageLabel = new JLabel("Language of the given content is : "+ languageTesting, SwingConstants.CENTER);
        JLabel domainLabel = new JLabel("The domain of the given content is : "+ dominantClassification, SwingConstants.CENTER);
        //myFrame.getContentPane().add(languageLabel, BorderLayout.CENTER);
        myFrame.getContentPane().add(languageLabel);
        myFrame.getContentPane().add(domainLabel, BorderLayout.LINE_END);*/
        
        jLabel4.setText("Language of the given content is: "+languageTesting);
        //jLabel4.setVisible(true);
        jLabel5.setText("The domain of the given content is: "+dominantClassification);
        //jLabel5.setVisible(true);
        for(int i = 0; i < candidateSentencesSelected.size(); i++)
        {
            list1.add(candidateSentencesSelected.get(i), i);
        }
        
        
        
        //######################### Language Detection #####################################
        /*LanguageIdentifier identifierInputText = new LanguageIdentifier(jTextArea1.getText());
        String languageInputText = identifierInputText.getLanguage();
        //System.out.println("Language of the given content is : " + language);
        JFrame myFrame = new JFrame("Test GUI");
        myFrame.setVisible(true);
        myFrame.setBounds(300, 200, 700, 400);
        JLabel myText = new JLabel("Language of the given content is : "+ languageInputText, SwingConstants.CENTER);
        myFrame.getContentPane().add(myText, BorderLayout.CENTER);
        //######################### Sentence Splittet #####################################
        String[] sentences = null;
        try {
            sentences = PreProcessing.OpenNLP.SentenceDetect(jTextArea1.getText());
        } catch (IOException ex) {
            Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Number of sentences = "+ sentences.length);
        for(int i=0; i<sentences.length; i++){
            if(sentences[i].split(",").length == 3)
            {
                String[] splittedSentence = sentences[i].split(",");
                sentences[i] = splittedSentence[0].concat(splittedSentence[2]);    
            }
            System.out.println("Sentence number "+ i + ": "+ sentences[i]);
        }
        
        //############### Removing Stop Wrods from tokens ###############
        String s[] = new String[sentences.length];
        for(int i=0; i<sentences.length; i++){
            s[i] = PreProcessing.StopWordsRemoval.removeStopWordsFromSentence(sentences[i]);
        }
        for(int i=0; i<s.length; i++){
            System.out.println("Sentence number "+ i + ": "+ s[i]);
        }
        // ############### POS Tagging ###############
        String sentences_POSTag[]= new String[s.length];
        ArrayList<String> words_d1 = new ArrayList<String>();
        for(int i=0; i<s.length; i++){
            try {
                sentences_POSTag[i] = PreProcessing.OpenNLP.POSTag(s[i]);
            } catch (IOException ex) {
                Logger.getLogger(EnrichmentUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Sentence number "+ i + ": "+ sentences_POSTag[i]);
            //System.out.println("Number of tokens: "+ PreProcessing.OpenNLP.TagTokens.length);
            //System.out.println("Number of tags: "+ PreProcessing.OpenNLP.tags.length);
            //System.out.println("Tokens and tags in sentence "+ i +":" );
            for(int j=0; j<PreProcessing.OpenNLP.TagTokens.length; j++){
                //System.out.println(PreProcessing.OpenNLP.TagTokens[j]+" "+ PreProcessing.OpenNLP.tags[j]);
                words_d1.add(PreProcessing.OpenNLP.TagTokens[j].toLowerCase()); 
            }
            
        }*/
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Valid and go to ontology
        //############ Learning ########################
        System.out.println("Ontology Learning");
        //System.out.println("The look-up table in the master Agent");
        String [][]lookUpTable = OntologyEnrichment.MasterAgent.BuildLookUpTable();
        
        //String Input = "Professor teaches courses";
        //OntologyEnrichment.MasterAgent.ReadOntology();
        if(list1.getSelectedItems().length < 1)
        {
            JOptionPane.showMessageDialog(null,"Please select at least one sentence", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else 
        {
            String[] sentencesSelected = list1.getSelectedItems();
            System.out.print("domain is "+dominantClassification + "language is  "+ languageTesting);
            OntologyEnrichment.MasterAgent.OntologyEnrichment(sentencesSelected, dominantClassification, languageTesting, lookUpTable);
            
            
            //String InputPOS = PreProcessing.OpenNLP.POSTag(sentencesSelected.toString());
            //System.out.println(InputPOS);
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void list1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list1MouseClicked
        // TODO add your handling code here:
        
      
        
    }//GEN-LAST:event_list1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         
          int ind = list1.getSelectedIndex();
          String s = list1.getSelectedItem();
          String input = (String)JOptionPane.showInputDialog(null, "Edit the candidate sentence",s);
//          jLabel9.setText(s);
          list1.remove(ind);
          list1.addItem(input, ind);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnrichmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnrichmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnrichmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnrichmentUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnrichmentUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.Label label1;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables
}
